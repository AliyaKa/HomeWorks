#1. Подсчитать, сколько было выделено памяти под переменные в ранее разработанных программах в рамках первых трех уроков. Проанализировать результат и определить программы с наиболее эффективным использованием памяти.
#Примечание: Для анализа возьмите любые 1-3 ваших программы или несколько вариантов кода для одной и той же задачи. Результаты анализа вставьте в виде комментариев к коду. Также укажите в комментариях версию Python и разрядность вашей ОС.

''' Задача № 1. Подсчитать, сколько было выделено памяти под переменные в ранее
разработанных программах в рамках первых трех уроков. Проанализировать
результат и определить программы с наиболее эффективным использованием памяти.
Примечание: Для анализа возьмите любые 1-3 ваших программы или несколько
вариантов кода для одной и той же задачи. Результаты анализа вставьте в виде
комментариев к коду. Также укажите в комментариях версию Python и разрядность 
вашей ОС. '''

''' Версия Python: python 3.7 x32
ОС: Windows 7 x64 '''

import sys


def show_size(x, level=0):
    ''' Добавил в функцию сложение всех затрат памяти
        и возврат общей суммы затраченной памяти '''
    size_par = sys.getsizeof(x)
    print('\t' * level, f'type={type(x)}, size={size_par}, object={x}')
    if hasattr(x, '__iter__'):
        if hasattr(x, 'items'):
            for key, value in x.items():
                show_size(key, level + 1)
                size_par = size_par + sys.getsizeof(key)
                show_size(value, level + 1)
                size_par = size_par + sys.getsizeof(value)
        elif not isinstance(x, str):
            for item in x:
                show_size(item, level + 1)
                size_par = size_par + sys.getsizeof(item)
    return size_par


# Урок 1, задача № 1. Найти сумму и произведение цифр трехзначного
# числа, которое вводит пользователь.

a = input('Введите трехзначное число: ')

x = int(a[0])
y = int(a[1])
z = int(a[2])

sum_l = x + y + z
mult = x * y * z

sum_member = sys.getsizeof(a) + sys.getsizeof(x) + sys.getsizeof(y) + sys.getsizeof(z) + sys.getsizeof(
    sum_l) + sys.getsizeof(mult)
print('В программе задействовано байт памяти: {}'.format(sum_member))

# Результат запуска программы и измерения:
#
#Введите трехзначное число: 123
#В программе задействовано байт памяти: 192



# Урок 2, задача № 3. Сформировать из введенного числа обратное по порядку
# входящих в него цифр и вывести на экран. Например, если введено число 3486,
# то надо вывести число 6843.

nn = 0
def reverse(n):
  global nn
  if (n > 0):
    nn = (nn * 10) + n % 10
    reverse(n // 10) 
  return nn
  
n = int(input('Введите натуральное число: '))
new_num = reverse(n)
print(f'Число перевертыш - {new_num}')

sum_member2 = show_size(new_num) + show_size(nn) + show_size(n) + show_size(reverse(n))
print('В программе задействовано байт памяти: {}'.format(sum_member2))

# Результат запуска программы и измерения:
#
# Введите натуральное число: 123456
# Число перевертыш - 654321
#  type=<class 'int'>, size=28, object=654321
#  type=<class 'int'>, size=28, object=654321
#  type=<class 'int'>, size=28, object=123456
#  type=<class 'int'>, size=32, object=654321654321
# В программе задействовано байт памяти: 116