# 1. Написать программу, которая будет складывать, вычитать, умножать или делить два числа. Числа и знак операции вводятся пользователем. После выполнения вычисления программа не должна завершаться, а должна запрашивать новые данные для вычислений. Завершение программы должно выполняться при вводе символа '0' в качестве знака операции. Если пользователь вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и снова запрашивать знак операции. Также сообщать пользователю о невозможности деления на ноль, если он ввел 0 в качестве делителя.
print('\n* * * Задача № 1 * * *\n')
print('Выход из программы действием 0!')

while True:
    action = input('действие: ')

    if action in ('+', '-', '*', '/', '0'):
        if action == '0':
            break
        else:
            a = int(input('число 1: '))
            b = int(input('число 2: '))
            if action == '+':
                print(f'{a} + {b} = {a + b}\n')
            elif action == '-':
                print(f'{a} - {b} = {a - b}\n')
            elif action == '*':
                print(f'{a} * {b} = {a * b}\n')
            elif action == '/':
                try:
                    print(f'{a} / {b} = {a / b}\n')
                except ZeroDivisionError:
                    print('Ошибка! Деление на ноль \n')
    else:
        print('Неверное действие \n')

# # # 2. Посчитать четные и нечетные цифры введенного натурального числа. Например, если введено число 34560, то у него 3 четные цифры (4, 6 и 0) и 2 нечетные (3 и 5).
print('\n* * * Задача № 2 * * *\n')
n = input('Введите натуральное число: ')
nature_list = list(n)
j = []
k = []
for i in range(len(nature_list)):
    if int(nature_list[i]) % 2 == 0:
        j.append(nature_list[i])
    else:
        k.append(nature_list[i])
print(f'четных {len(j)} - {j}, нечетных {len(k)} - {k}')

# # # 3. Сформировать из введенного числа обратное по порядку входящих в него цифр и вывести на экран. Например, если введено число 3486, то надо вывести число 6843.

print('\n* * * Задача № 3 * * *\n')
nn = 0


def reverse(n):
    global nn
    if (n > 0):
        nn = (nn * 10) + n % 10
        reverse(n // 10)
    return nn


n = int(input('Введите натуральное число: '))
print(f'Число перевертыш - {reverse(n)}')

# # # 4. Найти сумму n элементов следующего ряда чисел: 1 -0.5 0.25 -0.125 ...Количество элементов (n) вводится с клавиатуры.
print('\n* * * Задача № 4 * * *\n')
n = int(input('Введите количество элементов ряда 1 -0.5 0.25 -0.125... : '))
el = 1
sum = 0
while n > 0:
    sum += el
    el /= -2
    n -= 1
print(sum)

# # 5. Вывести на экран коды и символы таблицы ASCII, начиная с символа под номером 32 и заканчивая 127-м включительно. Вывод выполнить в табличной форме: по десять пар "код-символ" в каждой строке.

print('\n* * * Задача № 5 * * *\n')
for i in range(32, 128):
    print(f'{i}-{chr(i)}', end='  ')
    if i % 10 == 0:
        print('\n')

# # 6. В программе генерируется случайное целое число от 0 до 100. Пользователь должен его отгадать не более чем за 10 попыток. После каждой неудачной попытки должно сообщаться больше или меньше введенное пользователем число, чем то, что загадано. Если за 10 попыток число не отгадано, то вывести загаданное число.

print('\n* * * Задача № 6 * * *\n')
from random import randint

num = randint(0, 100)

print('Отгадай число: ')
for i in range(10):
    r = int(input(f'попытка № {i + 1} = '))
    if r > num:
        print(f'число {r} больше чем загаданное число')
    elif r < num:
        print(f'число {r} меньше чем загаданное число')
    elif r == num:
        print(f'Правильно!')
        break
    if i + 1 == 10:
        print(f'Это число - {num}')

# # 7. Напишите программу, доказывающую или проверяющую, что для множества натуральных чисел выполняется равенство: 1+2+...+n = n(n+1)/2, где n - любое натуральное число.
print('\n* * * Задача № 7 * * *\n')


def func(n):
    if n <= 1:
        return 1
    return n + func(n - 1)


n = int(input('Введите натуральное число: '))
func_result = func(n)
print(f'Результат вычисления func({n}) = {func_result}')
print(f'Результат формулы {n}({n}+1)/2 = {n * (n + 1) / 2}')

# # 8. Посчитать, сколько раз встречается определенная цифра в введенной последовательности чисел. Количество вводимых чисел и цифра, которую необходимо посчитать, задаются вводом с клавиатуры.
print('\n* * * Задача № 8 * * *\n')


def search_digit(dd, digit):
    sum = 0
    for i in range(len(dd)):
        if dd[i] == digit:
            sum += 1
    return sum


n = int(input('Количество чисел: '))
digit = input('Цифра: ')

for i in range(0, n):
    d = input(f'число {i + 1}:')
    dd = list(d)
    print(f'В числе {d} цифра {digit} встречается {search_digit(dd, digit)} раз\n')

# # 9. Среди натуральных чисел, которые были введены, найти наибольшее по сумме цифр. Вывести на экран это число и сумму его цифр.
print('\n* * * Задача № 9 * * *\n')


def sum_num(num):
    sum = 0
    for i in num:
        sum += int(i)
    return sum


list_num = [i for i in input('Введите натуральные числа через пробел и нажмите Enter \n').split()]

max_num = 0
max_sum = 0
for i in list_num:
    if sum_num(i) > max_sum:
        max_num = i
        max_sum = sum_num(i)

print(f'Наибольшее по сумме цифр - {max_sum} у числа {max_num}')